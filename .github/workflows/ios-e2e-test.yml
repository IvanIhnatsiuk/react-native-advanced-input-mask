name: üõ† iOS e2e tests

on:
  push:
    branches:
      - main
    paths:
      - ".github/workflows/build-ios.yml"
      - "package/react-native-advanced-input-mask.podspec"
      - "package/**"
      - "apps/example/**"
      - "yarn.lock"
      - "apps/example/yarn.lock"
  pull_request:
    branches:
      - main
    paths:
      - ".github/workflows/build-ios.yml"
      - "package/react-native-advanced-input-mask.podspec"
      - "package/**"
      - "apps/example/**"
      - "yarn.lock"
      - "example/yarn.lock"

jobs:
  build-ios:
    runs-on: macos-latest
    defaults:
      run:
        working-directory: apps/example/ios
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: "15.4"

      - name: Setup
        uses: ./.github/actions/setup

      - name: Install Ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 1.5G
          key: ${{ runner.os }}-ccache-example-ios
          create-symlink: true
      - name: Setup ccache behavior
        run: |
          echo "CCACHE_SLOPPINESS=clang_index_store,file_stat_matches,include_file_ctime,include_file_mtime,ivfsoverlay,pch_defines,modules,system_headers,time_macros" >> $GITHUB_ENV
          echo "CCACHE_FILECLONE=true" >> $GITHUB_ENV
          echo "CCACHE_DEPEND=true" >> $GITHUB_ENV
          echo "CCACHE_INODECACHE=true" >> $GITHUB_ENV  

      - name: Restore Pods cache
        uses: actions/cache@v4
        with:
          path: |
            apps/example/ios/Pods
            ~/Library/Caches/CocoaPods
            ~/.cocoapods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-
      - name: Install Pods
        run: export USE_CCACHE=1 && pod install

      - name: Install xcpretty
        run: gem install xcpretty    

      - name: Build ios
        run: |
          cd ios && xcodebuild -workspace MaskedTextInputExample.xcworkspace \
            -scheme MaskedTextInputExample \
            -destination 'platform=iOS Simulator,name=iPhone 15 Pro' \
            -configuration Release \
            -sdk iphonesimulator \
            -derivedDataPath ../ios/build \
            CC=clang CPLUSPLUS=clang++ LD=clang LDPLUSPLUS=clang++ \
            GCC_OPTIMIZATION_LEVEL=0 \
            GCC_PRECOMPILE_PREFIX_HEADER=YES \
            ASSETCATALOG_COMPILER_OPTIMIZATION=time \
            DEBUG_INFORMATION_FORMAT=dwarf \
            COMPILER_INDEX_STORE_ENABLE=NO | xcpretty
      - uses: actions/upload-artifact@v4    
        with:
            name: ios-ipa
            path: example/ios/build/Build/Products/Release-iphonesimulator/MaskedTextInputExample.app/**
  e2e-test:
    name: "‚öôÔ∏è Automated test cases"
    runs-on: macos-latest
    needs: build-ios
    steps:
      - uses: actions/checkout@v4
      - name: Download a single artifact
        uses: actions/download-artifact@v4
        with:
          name: ios-ipa
          path: apps/example/ios/build/Build/Products/Release-iphonesimulator/MaskedTextInputExample.app/
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.devices.xcode }}
      - name: Install Maestro CLI
        run: brew tap mobile-dev-inc/tap && brew install maestro
      - name: Install app on simulator
        run: |
          UDID=$(xcrun simctl list devices | grep "iPhone 15 Pro (" | grep -oE "[0-9A-F-]{36}" | head -n 1)
          xcrun simctl boot "$UDID"
          xcrun simctl install "$UDID" build/Build/Products/Release-iphonesimulator/MaskedTextInputExample.app  
      - name: Run E2E tests
        run: maestro test e2e/.maestro/*